<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB2
        CAAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFIAAwMBBAMQAesDIgHMAy4BUQMGAQfIAAMgAS8DIAEvAwwBDxwAAw8B7AMA
        Af8DAAH/AwgB9QMvAVYDBwEJOAABHQEeASIBKAIiASgBLwIiASgBLwIiASgBLwIiASgBLwIiASgBLwIL
        AQwBDmgAAzQBkAMAAf8DAAH/AwgB9QMVARwYAAMpAb0DAAH/AwAB/wM1AYkDKgG6Ax4B1DQAAUUBSQGC
        AZIBNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BOwFGAeEB8AIX
        ARkBHmQAAyABzwMAAf8DAAH/AwAB/wMgATAYAAMuAVQDAAH/AzQBkgMsAbMDAAH/AwAB/wMoAb8wAAFG
        AUwBrwG/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHx
        Af8BKwEsATcBQGQAAyABzwMAAf8DAAH/AwAB/wMgATAcAAMyAZ0DLQGxAwAB/wMAAf8DAAH/AwAB/wMq
        AbkDBQEGKAABRgFMAa8BvwE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFD
        AfEB/wE2AUMB8QH/ASsBLAE3AUBUAAMFAQYDHwEtAyABMAMgATADGwHYAwAB/wMAAf8DAAH/Ay8BVwMg
        ATADIAEwAxUBHBAAAy8BVgMCAfwDAAH/AwAB/wMAAf8DAAH/AwAB/wMvAasDBgEIJAABRgFMAa8BvwE2
        AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ASsBLAE3
        AUBUAAMtAa8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwgB9QMFAQYQAAMz
        AZYDAQH+AwAB/wMAAf8DAAH/AwAB/wMAAf8DLwGrAwQBBSAAAUYBTAGvAb8BNgFDAfEB/wE2AUMB8QH/
        ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wErASwBNwFAVAADIAHPAwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DIAEvFAADMwGYAwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AzIBmyAAAUYBTAGvAb8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2
        AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wErASwBNwFAVAADIAHPAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DGgElFAADBQEGAy8BqAMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM1
        AYQcAAFGAUwBrwG/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/
        ATYBQwHxAf8BKwEsATcBQFQAAyYBPAMkAcYDIAHPAyABzwMHAfYDAAH/AwAB/wMAAf8DGwHYAyABzwMg
        Ac8DNAGQAwIBAxgAAwkBDAMrAbgDAAH/AwAB/wMAAf8DAAH/AwAB/wMCAf0DNQGBGAABRgFMAa8BvwE2
        AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ASsBLAE3
        AUBkAAMgAc8DAAH/AwAB/wMAAf8DIAEwLAADCQEMAyoBugMAAf8DAAH/AwAB/wMAAf8DAAH/AzQBkQMx
        AV8UAAFGAUwBrwG/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/
        ATYBQwHxAf8BKwEsATcBQGQAAyABzwMAAf8DAAH/AwAB/wMgATAwAAMGAQgDJAHIAwAB/wMAAf8DAAH/
        AzIBmwMvAakDAwH7AzQBcAwAAhcBGQEeATYBOAFMAVgBOQE7AVQBYAE5ATsBVAFgATkBOwFUAWABOQE7
        AVQBYAE5ATsBVAFgATkBOwFUAWABOQE7AVQBYAErASwBNwFAZAADJAHGAwAB/wMAAf8DAAH/Ax8BLTgA
        Ax8B0QMAAf8DLQGxAzEBoQMAAf8DAAH/AxsB2gwAAUEBQwFpAXcBNgFDAfEB/wE2AUMB8QH/ATYBQwHx
        Af8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/AT8BSgHPAd9kAAMnAT0DIgHM
        AyABzwMvAawDBQEGOAADCQELAy8BqwM0AY0DAAH/AwAB/wMUAeUDEAEVFAADBwEJAUYBTQGjAbQBRAFM
        AcABzwFEAUwBwAHPAUQBTAHAAc8CIwEqATG8AAMJAQsDEQHoAwAB/wMQAeoDEAEV8AADDwEUAyABzwMW
        AR6IAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAC/wEHA/8CAAH+AT8BgQH/
        AfgBDwIAAfwBHwGBAf8B8AEHAgAB/AEfAYAB/wHwAQcCAAH8AR8BwAE/AfABBwIAAcABAwHAAR8B8AEH
        AgABwAEBAeABDwHwAQcCAAHAAQEB8AEPAfABBwIAAcABAQHwAQcB8AEHAgABwAEBAfgBAwHwAQcCAAH8
        AR8B/AEBAfABBwIAAfwBHwH+AQAB4AEHAgAB/AEfAf8BgAHgAQcCAAH8AR8B/wGAAfgBHwIAA/8BwQL/
        AgAD/wHjAv8CAAs=
</value>
  </data>
</root>