<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAW
        CAAAAk1TRnQBSQFMAgEBAwEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFIAAwMBBAMzAesDTQHMAzMBUQMGAQfIAAMhAS8DIQEvAwwBDxwAAy8B7AMA
        Af8DAAH/AxkB9QM1AVYDBwEJOAADHQEoAyEBLwMhAS8DIQEvAyEBLwMhAS8DCwEOaAADSwGQAwAB/wMA
        Af8DGQH1AxUBHBgAA1IBvQMAAf8DAAH/A0oBiQNSAboDSgHUNAACTQFOAZIBNgFDAfEB/wE2AUMB8QH/
        ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BRgFPAboB8AMWAR5kAANMAc8DAAH/AwAB/wMA
        Af8DIQEwGAADNAFUAwAB/wNMAZIDUQGzAwAB/wMAAf8DUQG/MAABVQFYAWoBvwE2AUMB8QH/ATYBQwHx
        Af8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/AyoBQGQAA0wBzwMAAf8DAAH/
        AwAB/wMhATAcAANPAZ0DUgGxAwAB/wMAAf8DAAH/AwAB/wNRAbkDBQEGKAABVQFYAWoBvwE2AUMB8QH/
        ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/AyoBQFQAAwUBBgMg
        AS0DIQEwAyEBMANHAdgDAAH/AwAB/wMAAf8DNgFXAyEBMAMhATADFQEcEAADNQFWAwgB/AMAAf8DAAH/
        AwAB/wMAAf8DAAH/A1IBqwMGAQgkAAFVAVgBagG/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHx
        Af8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8DKgFAVAADUgGvAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMZAfUDBQEGEAADTQGWAwQB/gMAAf8DAAH/AwAB/wMAAf8DAAH/A1IBqwME
        AQUgAAFVAVgBagG/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/
        ATYBQwHxAf8DKgFAVAADTAHPAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DIQEvFAADTQGYAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A04BmyAAAVUBWAFqAb8BNgFDAfEB/wE2
        AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wMqAUBUAANMAc8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMbASUUAAMFAQYDUQGoAwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/A0gBhBwAAVUBWAFqAb8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFD
        AfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wMqAUBUAAMoATwDTgHGA0wBzwNMAc8DGAH2AwAB/wMA
        Af8DAAH/A0cB2ANMAc8DTAHPA0sBkAMCAQMYAAMJAQwDUQG4AwAB/wMAAf8DAAH/AwAB/wMAAf8DCAH9
        A0YBgRgAAVUBWAFqAb8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHx
        Af8BNgFDAfEB/wMqAUBkAANMAc8DAAH/AwAB/wMAAf8DIQEwLAADCQEMA1IBugMAAf8DAAH/AwAB/wMA
        Af8DAAH/A0wBkQM5AV8UAAFVAVgBagG/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFD
        AfEB/wE2AUMB8QH/ATYBQwHxAf8DKgFAZAADTAHPAwAB/wMAAf8DAAH/AyEBMDAAAwYBCANQAcgDAAH/
        AwAB/wMAAf8DTgGbA1ABqQMMAfsDQAFwDAADFgEeAzYBWAM6AWADOgFgAzoBYAM6AWADOgFgAzoBYAM6
        AWADKgFAZAADTgHGAwAB/wMAAf8DAAH/AyABLTgAA0sB0QMAAf8DUgGxA1ABoQMAAf8DAAH/A0UB2gwA
        AkMBRAF3ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHx
        Af8BNgFDAfEB/wFQAVcBkQHfZAADKQE9A00BzANMAc8DUgGsAwUBBjgAAwkBCwNSAasDSgGNAwAB/wMA
        Af8DOQHlAxABFRQAAwcBCQJVAWEBtAFXAVoBegHPAVcBWgF6Ac8BVwFaAXoBzwMiATG8AAMJAQsDMwHo
        AwAB/wMyAeoDEAEV8AADDwEUA0wBzwMWAR6IAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUA
        AYAXAAP/AQAC/wEHA/8CAAH+AT8BgQH/AfgBDwIAAfwBHwGBAf8B8AEHAgAB/AEfAYAB/wHwAQcCAAH8
        AR8BwAE/AfABBwIAAcABAwHAAR8B8AEHAgABwAEBAeABDwHwAQcCAAHAAQEB8AEPAfABBwIAAcABAQHw
        AQcB8AEHAgABwAEBAfgBAwHwAQcCAAH8AR8B/AEBAfABBwIAAfwBHwH+AQAB4AEHAgAB/AEfAf8BgAHg
        AQcCAAH8AR8B/wGAAfgBHwIAA/8BwQL/AgAD/wHjAv8CAAs=
</value>
  </data>
</root>