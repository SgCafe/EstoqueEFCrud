<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADs
        BwAAAk1TRnQBSQFMAgEBAwEAAaABAAGgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFIAAwMBBANhAesDXQHMAzMBUQMGAQfIAAMhAS8DIQEvAwwBDxwAA10B7AMA
        Af8DAAH/A0cB9QM1AVYDBwEJOAADHQEoAyEBLwMhAS8DIQEvAyEBLwMhAS8DCwEOaAADTAGQAwAB/wMA
        Af8DRwH1AxUBHBgAA1gBvQMAAf8DAAH/A0oBiQNYAboDXQHUNAADTQGSATYBQwHxAf8BNgFDAfEB/wE2
        AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/AV0BXgFsAfADFgEeZAADXQHPAwAB/wMAAf8DAAH/
        AyEBMBgAAzQBVAMAAf8DTQGSA1YBswMAAf8DAAH/A1oBvzAAA1oBvwE2AUMB8QH/ATYBQwHxAf8BNgFD
        AfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/AyoBQGQAA10BzwMAAf8DAAH/AwAB/wMh
        ATAcAANQAZ0DVQGxAwAB/wMAAf8DAAH/AwAB/wNXAbkDBQEGKAADWgG/ATYBQwHxAf8BNgFDAfEB/wE2
        AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8DKgFAVAADBQEGAyABLQMhATADIQEw
        A1sB2AMAAf8DAAH/AwAB/wM2AVcDIQEwAyEBMAMVARwQAAM1AVYDKAH8AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DVAGrAwYBCCQAA1oBvwE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFD
        AfEB/wE2AUMB8QH/AyoBQFQAA1UBrwMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DRwH1AwUBBhAAA04BlgMUAf4DAAH/AwAB/wMAAf8DAAH/AwAB/wNUAasDBAEFIAADWgG/ATYBQwHx
        Af8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8DKgFAVAADXQHP
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DIQEvFAADTgGYAwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/A08BmyAAA1oBvwE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/
        ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/AyoBQFQAA10BzwMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AxsBJRQAAwUBBgNSAagDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DSAGE
        HAADWgG/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHx
        Af8DKgFAVAADKAE8A1kBxgNdAc8DXQHPA0YB9gMAAf8DAAH/AwAB/wNbAdgDXQHPA10BzwNMAZADAgED
        GAADCQEMA1gBuAMAAf8DAAH/AwAB/wMAAf8DAAH/AygB/QNGAYEYAANaAb8BNgFDAfEB/wE2AUMB8QH/
        ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wMqAUBkAANdAc8DAAH/AwAB/wMA
        Af8DIQEwLAADCQEMA1gBugMAAf8DAAH/AwAB/wMAAf8DAAH/A0wBkQM5AV8UAANaAb8BNgFDAfEB/wE2
        AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wMqAUBkAANdAc8DAAH/
        AwAB/wMAAf8DIQEwMAADBgEIA1wByAMAAf8DAAH/AwAB/wNPAZsDUwGpAyEB+wNAAXAMAAMWAR4DNgFY
        AzoBYAM6AWADOgFgAzoBYAM6AWADOgFgAzoBYAMqAUBkAANZAcYDAAH/AwAB/wMAAf8DIAEtOAADXQHR
        AwAB/wNVAbEDUQGhAwAB/wMAAf8DXwHaDAACQwFEAXcBNgFDAfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFD
        AfEB/wE2AUMB8QH/ATYBQwHxAf8BNgFDAfEB/wE2AUMB8QH/Al0BYwHfZAADKQE9A10BzANdAc8DVQGs
        AwUBBjgAAwkBCwNUAasDSwGNAwAB/wMAAf8DXwHlAxABFRQAAwcBCQJVAVcBtAJdAWEBzwJdAWEBzwJd
        AWEBzwMiATG8AAMJAQsDYAHoAwAB/wNdAeoDEAEV8AADDwEUA10BzwMWAR6IAAFCAU0BPgcAAT4DAAEo
        AwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAC/wEHA/8CAAH+AT8BgQH/AfgBDwIAAfwBHwGBAf8B8AEH
        AgAB/AEfAYAB/wHwAQcCAAH8AR8BwAE/AfABBwIAAcABAwHAAR8B8AEHAgABwAEBAeABDwHwAQcCAAHA
        AQEB8AEPAfABBwIAAcABAQHwAQcB8AEHAgABwAEBAfgBAwHwAQcCAAH8AR8B/AEBAfABBwIAAfwBHwH+
        AQAB4AEHAgAB/AEfAf8BgAHgAQcCAAH8AR8B/wGAAfgBHwIAA/8BwQL/AgAD/wHjAv8CAAs=
</value>
  </data>
  <metadata name="clmCodigo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmNome.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmPreco.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmEstoque.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>